cmake_minimum_required(VERSION 3.20.2)
project(HashSmasher VERSION 1.0.0)
set(CMAKE_CXX_STANDARD 14)
include(CTest)
include_directories(${CMAKE_SOURCE_DIR}/include)
if(${CMAKE_SYSTEM_NAME} MATCHES Android)
    message("This is a ${CMAKE_SYSTEM_NAME} system")
    include_directories(${CMAKE_SOURCE_DIR}/thirdparty/libsodium-arm64/include)
elseif(${CMAKE_SYSTEM_NAME} MATCHES Linux OR ${CMAKE_SYSTEM_NAME} MATCHES Darwin)
    message("This is a ${CMAKE_SYSTEM_NAME} system")
    include_directories(${CMAKE_SOURCE_DIR}/thirdparty/libsodium-linux/include)
else()
    message(FATAL_ERROR "${CMAKE_SYSTEM_NAME} system is not supported yet")
endif()

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
add_executable(HashSmasher ${CMAKE_SOURCE_DIR}/src/HashSmasher.cpp ${CMAKE_SOURCE_DIR}/src/main.cpp)
add_executable(HashSmasherTest ${CMAKE_SOURCE_DIR}/src/HashSmasher.cpp ${CMAKE_SOURCE_DIR}/test/genericHashing.cpp)
if(${CMAKE_SYSTEM_NAME} MATCHES Android)
    target_link_libraries(HashSmasher ${CMAKE_SOURCE_DIR}/thirdparty/libsodium-arm64/lib/libsodium.a)
    target_link_libraries(HashSmasherTest ${CMAKE_SOURCE_DIR}/thirdparty/libsodium-arm64/lib/libsodium.a)
elseif(${CMAKE_SYSTEM_NAME} MATCHES Linux OR ${CMAKE_SYSTEM_NAME} MATCHES Darwin)
    target_link_libraries(HashSmasher ${CMAKE_SOURCE_DIR}/thirdparty/libsodium-linux/lib/libsodium.a)
    target_link_libraries(HashSmasherTest ${CMAKE_SOURCE_DIR}/thirdparty/libsodium-linux/lib/libsodium.a)
else()
    message(FATAL_ERROR "${CMAKE_SYSTEM_NAME} system is not supported yet")
endif()

add_test(NAME GenericHashingTest COMMAND HashSmasherTest)